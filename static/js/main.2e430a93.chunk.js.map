{"version":3,"sources":["reportWebVitals.ts","_COMPONENTS/_PAGES/1.HomePage/Sub_Components/1.Banner/Banner.tsx","_COMPONENTS/_PAGES/1.HomePage/Sub_Components/2.Week/Week.tsx","_COMPONENTS/_PAGES/1.HomePage/HomePage.tsx","_STORE/City/constants.ts","_STORE/Forecast/constants.ts","_COMPONENTS/_MAIN/0.Navbar/utilities.ts","_COMPONENTS/_MAIN/0.Navbar/Navbar.tsx","_STORE/City/actions.ts","_STORE/Forecast/actions.ts","_COMPONENTS/_PAGES/2.DetailPage/DetailPage.tsx","_COMPONENTS/_MAIN/1.Background/BackGround.tsx","_COMPONENTS/_MAIN/1.Background/infos.ts","_COMPONENTS/_MAIN/_RouterWeb/RouterWeb.tsx","_STORE/City/reducers.ts","_STORE/Forecast/reducers.ts","_STORE/index.ts","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Banner","state","useSelector","Row","className","Col","xs","lg","city","city_name","country_name","lat","long","src","forecastInfo","current","icon","alt","main","description","temp","humidity","wind_speed","clouds","rain","snow","Week","forecast","map","day","min_temp","max_temp","id","HomePage","props","Container","SELECT_CITY","CURRENT_FORECAST","WEEK_FORECAST","apiKey","process","fetchCity","query","a","fetch","country","response","json","result","name","coord","lon","fetchForecast","console","log","setRedux","week","weather","daily","slice","dayWeather","min","max","concat","infos","Navbar","useState","filters","showFilters","byCity","setByCity","dispatch","useDispatch","setReduxData","type","weekForecast","useEffect","setCity","e","key","fillInfos","currentId","currentTarget","newByCity","value","style","display","placeholder","onChange","onKeyDown","onClick","DetailPage","Background","status","checkStatus","backgroundImage","RouterWeb","path","exact","render","PureComponent","composedEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","action","storeConfig","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.2e430a93.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\n\r\n//REDUX IMPORTS\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { MainState } from \"../../../../../_STORE\";\r\n\r\n//BOOTSTRAP IMPORTS\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\n//STYLE IMPORTS\r\nimport \"./Banner.scss\";\r\n\r\nexport default function Banner() {\r\n  const state = useSelector((state: MainState) => state);\r\n\r\n  return (\r\n    <Row className=\"banner\">\r\n      <Col xs={12} lg={6} className=\"city\">\r\n        <h2>\r\n          {state.city.city_name} <span>[{state.city.country_name}]</span>\r\n        </h2>\r\n        <p>\r\n          [{state.city.lat}] [{state.city.long}]\r\n        </p>\r\n        <img\r\n          src={`http://openweathermap.org/img/wn/${state.forecastInfo.current.icon}@4x.png`}\r\n          alt=\"\"\r\n        />\r\n      </Col>\r\n      <Col xs={12} lg={6} className=\"info\">\r\n        <Row className=\"header\">\r\n          <Col xs={12} lg={6} className=\"status\">\r\n            <h2>{state.forecastInfo.current.main}</h2>\r\n            <p>{state.forecastInfo.current.description}</p>\r\n          </Col>\r\n          <Col xs={12} lg={6} className=\"temp\">\r\n            <span>{state.forecastInfo.current.temp} °C</span>\r\n            <img src=\"./assets/temp.png\" alt=\"\" />\r\n          </Col>\r\n        </Row>\r\n        <div className=\"sub-info\">\r\n          <div className=\"weather-card\">\r\n            <img src=\"./assets/humidity.png\" alt=\"\" />\r\n            <p>Humidity</p>\r\n            {state.forecastInfo.current.humidity} AH\r\n          </div>\r\n          <div className=\"weather-card\">\r\n            <img src=\"./assets/wind.png\" alt=\"\" />\r\n            <p>Wind Speed</p>\r\n            {state.forecastInfo.current.wind_speed} km/h\r\n          </div>\r\n          <div className=\"weather-card\">\r\n            <img src=\"./assets/clouds.png\" alt=\"\" />\r\n            <p>Clouds</p>\r\n            {state.forecastInfo.current.clouds}\r\n          </div>\r\n        </div>\r\n        <div className=\"sub-info\">\r\n          <div className=\"weather-card\">\r\n            <img src=\"./assets/rain.png\" alt=\"\" />\r\n            <p>Rain</p>\r\n            {state.forecastInfo.current.rain} mm\r\n          </div>\r\n          <div className=\"weather-card\">\r\n            <img src=\"./assets/snow.png\" alt=\"\" />\r\n            <p>Snow</p>\r\n            {state.forecastInfo.current.snow} m\r\n          </div>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n//REDUX IMPORTS\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { MainState } from \"../../../../../_STORE\";\r\n\r\n//BOOTSTRAP IMPORTS\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\n//STYLE IMPORTS\r\nimport \"./Week.scss\";\r\n\r\nexport default function Week() {\r\n  const state = useSelector((state: MainState) => state);\r\n\r\n  return (\r\n    <Row className=\"week\">\r\n      {state.forecastInfo.forecast.map((day) => {\r\n        return (\r\n          <Col key={day.id}>\r\n            <img\r\n              src={`http://openweathermap.org/img/wn/${day.icon}@4x.png`}\r\n              alt=\"\"\r\n            />\r\n            <p>{day.main}</p>\r\n            <div className=\"temp\">\r\n              <img src=\"./assets/temp.png\" alt=\"\" />\r\n              <div className=\"min-max\">\r\n                <p>\r\n                  min: <span>{day.min_temp}</span> max:{\" \"}\r\n                  <span>{day.max_temp}</span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"details\">\r\n              <img src=\"./assets/humidity.png\" alt=\"\" />\r\n              <span>{day.humidity}</span> ah\r\n            </div>\r\n            <div className=\"details\">\r\n              <img src=\"./assets/wind.png\" alt=\"\" />\r\n              <span>{day.wind_speed}</span> km/h\r\n            </div>\r\n            <div className=\"details\">\r\n              <img src=\"./assets/clouds.png\" alt=\"\" />\r\n              <span>{day.clouds}</span>\r\n            </div>\r\n            <div className=\"details\">\r\n              <img src=\"./assets/rain.png\" alt=\"\" />\r\n              <span>{day.rain}</span> mm\r\n            </div>\r\n            <div className=\"details\">\r\n              <img src=\"./assets/snow.png\" alt=\"\" />\r\n              <span>{day.snow}</span> m\r\n            </div>\r\n          </Col>\r\n        );\r\n      })}\r\n    </Row>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\n\r\n//REDUX IMPORTS\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n//TYPES IMPORTS\r\nimport { MainState } from \"../../../_STORE/\";\r\n\r\n//UTILITIES IMPORTS\r\n\r\n//PERSONAL COMPONENTS IMPORTS\r\nimport Banner from \"./Sub_Components/1.Banner/Banner\";\r\nimport Week from \"./Sub_Components/2.Week/Week\";\r\n\r\n//BOOTSTRAP IMPORTS\r\nimport { Container } from \"react-bootstrap\";\r\n\r\n//STYLE\r\nimport \"./HomePage.scss\";\r\n\r\n//PROPS\r\n\r\nexport default function HomePage(props: RouteComponentProps) {\r\n  const state = useSelector((state: MainState) => state);\r\n\r\n  return (\r\n    <div id=\"home-page\">\r\n      <Container>\r\n        <Banner />\r\n      </Container>\r\n      <Week />\r\n    </div>\r\n  );\r\n}\r\n","export const SELECT_CITY = 'SELECT_CITY';","export const CURRENT_FORECAST = 'SHOW_FORECAST'\r\nexport const WEEK_FORECAST = 'WEEK_FORECAST'","//REDUX IMPORTS\r\nimport { storeConfig } from '../../../_STORE'\r\nimport { SELECT_CITY } from '../../../_STORE/City/constants'\r\nimport { CURRENT_FORECAST, WEEK_FORECAST } from '../../../_STORE/Forecast/constants'\r\n\r\n//INTERFACE IMPORTS\r\nimport { ICity } from '../../../_STORE/City/types'\r\nimport { IForecast } from '../../../_STORE/Forecast/types'\r\nimport { IDaily, IQueryCity, IQueryForecast } from './types'\r\nimport { selectCity } from '../../../_STORE/City/actions'\r\n\r\n//MAIN\r\nlet urlCity: string = 'https://api.openweathermap.org/data/2.5/forecast?q='\r\nlet urlForecast: string = 'https://api.openweathermap.org/data/2.5/onecall?'\r\nconst apiKey: string | undefined = `${process.env.REACT_APP_API_KEY}`\r\n\r\n//FETCH FORECAST\r\nexport const fetchCity = async (query: IQueryCity): Promise<ICity> => {\r\n    const response = await fetch(`${urlCity}${query.city},${query.country}&appid=${apiKey}`)\r\n    const result = await response.json()\r\n    const city: ICity = {\r\n        city_name: result.city.name,\r\n        country_name: result.city.country,\r\n        lat: result.city.coord.lat,\r\n        long: result.city.coord.lon\r\n    }\r\n    return city\r\n}\r\n\r\n//FETCH FORECAST\r\nexport const fetchForecast = async (query: IQueryForecast) => {\r\n    const response = await fetch(`${urlForecast}lat=${query.lat}&lon=${query.lon}&exclude=hourly,minutely,alerts&units=metric&appid=${apiKey}`)\r\n    const result = await response.json()\r\n    console.log(result)\r\n    return result\r\n}\r\n\r\n//SET REDUX\r\nexport const setRedux = async (query: IQueryCity) => {\r\n    //CITY\r\n    const city: ICity = await fetchCity(query)\r\n    const forecast = await fetchForecast({ lat: city.lat, lon: city.long })\r\n\r\n    let week:IForecast[] = []\r\n\r\n    //CURRENT\r\n    const current: IForecast = {\r\n        id: forecast.current.weather[0].id,\r\n        main: forecast.current.weather[0].main,\r\n        description: forecast.current.weather[0].description,\r\n        icon: forecast.current.weather[0].icon,\r\n        temp: forecast.current.temp,\r\n        humidity: forecast.current.humidity,\r\n        wind_speed: forecast.current.wind_speed,\r\n        clouds: forecast.current.clouds,\r\n        rain: forecast.current.rain ? forecast.current.rain : 0,\r\n        snow: forecast.current.snow ? forecast.current.snow : 0\r\n    }\r\n\r\n    //WEEK\r\n    forecast.daily.slice(0,6).map((day:IDaily) => {\r\n        let dayWeather: IForecast = {\r\n            id: day.weather[0].id,\r\n            main: day.weather[0].main,\r\n            description: day.weather[0].description,\r\n            icon: day.weather[0].icon,\r\n            min_temp: day.temp.min,\r\n            max_temp: day.temp.max,\r\n            humidity: day.humidity,\r\n            wind_speed: day.wind_speed,\r\n            clouds: day.clouds,\r\n            rain: day.rain ? day.rain : 0,\r\n            snow: day.snow ? day.snow : 0\r\n        }\r\n        week=week.concat(dayWeather)\r\n    })\r\n     \r\n    //REDUX INFOS\r\n    const infos = {\r\n        city: city,\r\n        current: current,\r\n        week: week\r\n    }\r\n\r\n    return infos\r\n}","import React, { useState, useEffect} from 'react'\r\n\r\n//REDUX IMPORTS\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { selectCity } from '../../../_STORE/City/actions'\r\nimport { currentForecast, weekForecast} from '../../../_STORE/Forecast/actions'\r\nimport { MainState } from '../../../_STORE'\r\n\r\n//TYPES INTERFACES IMPORTS\r\n\r\n//UTILITIES IMPORTS\r\nimport { setRedux } from './utilities'\r\n\r\n//STYLE\r\nimport './Navbar.scss';\r\n\r\nexport default function Navbar() {\r\n\r\n    const [filters, showFilters] = useState(false)\r\n    const [byCity, setByCity] = useState({ city: 'Rome', country: 'IT' })\r\n    const state = useSelector((state: MainState) => state)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const setReduxData = async () => {\r\n        const result = await setRedux(byCity)\r\n        console.log(result)\r\n        dispatch(selectCity(result.city))\r\n        dispatch(currentForecast(result.current))\r\n        dispatch(weekForecast(result.week))\r\n    }\r\n    \r\n    useEffect(() => {\r\n        (async () => {\r\n            await setReduxData()\r\n        })()  \r\n    }, [dispatch])\r\n\r\n    const setCity = async (e: React.KeyboardEvent) => {\r\n        if (e.key === 'Enter') {\r\n            await setReduxData()\r\n        }\r\n    }\r\n\r\n    const fillInfos = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        let currentId = e.currentTarget.id\r\n        let newByCity = { ...byCity }\r\n        if (currentId === 'city') {\r\n            newByCity.city = e.currentTarget.value            \r\n        } else {\r\n            newByCity.country = e.currentTarget.value\r\n        }\r\n        setByCity(newByCity)\r\n    }\r\n\r\n    return (\r\n        <nav className=\"weather-nav\">\r\n            <div className=\"logo\">\r\n                <img src=\"./assets/app icon.png\" alt=\"\" />\r\n                <span>Weather App</span>\r\n            </div>\r\n            <div className=\"search-bar\">\r\n                <div className=\"search-inputs\">\r\n                    <i className=\"fas fa-search\"></i>\r\n                    <div className=\"byCity\" style={{display: filters ? 'none' : ''}}>\r\n                        <input type=\"text\" id='city' placeholder='City' onChange={ fillInfos} onKeyDown={setCity}/>\r\n                        <input type=\"text\" id='country' placeholder='Country' onChange={fillInfos} onKeyDown={ setCity}/>\r\n                    </div>\r\n                    <div className=\"byCoord\" style={{display: filters ? '' : 'none'}}>\r\n                        <input type=\"text\" id='lat' placeholder='Latitude'/>\r\n                        <input type=\"text\" id='long' placeholder='Longitude'/>\r\n                    </div>\r\n                </div>\r\n                <p onClick={()=>showFilters(!filters)}>Show Filters</p>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import { ICity } from './types'\r\nimport { SELECT_CITY } from './constants'\r\n\r\nexport interface SelectCity{\r\n    type: typeof SELECT_CITY;\r\n    city: ICity\r\n}\r\n\r\nexport const selectCity = (city: ICity) => ({\r\n    type: SELECT_CITY,\r\n    city\r\n})","import { IForecast } from './types'\r\nimport { CURRENT_FORECAST, WEEK_FORECAST } from './constants'\r\n\r\ninterface ICurrentForecast{\r\n    type: typeof CURRENT_FORECAST,\r\n    forecast: IForecast\r\n}\r\n\r\ninterface IWeeKForecast{\r\n    type: typeof WEEK_FORECAST,\r\n    weekForecast: IForecast[]\r\n}\r\n\r\nconst currentForecast = (forecast: IForecast) => ({\r\n    type: CURRENT_FORECAST,\r\n    forecast       \r\n})\r\n\r\nconst weekForecast = (weekForecast: Array<IForecast>) => ({\r\n    type: WEEK_FORECAST,\r\n    weekForecast\r\n})\r\n\r\nexport type ForecastApp = ICurrentForecast | IWeeKForecast\r\n\r\nexport { currentForecast, weekForecast }","import React, { useState, useEffect } from 'react'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\n\r\n//STYLE\r\nimport './DetailPage.scss';\r\n\r\nexport default function DetailPage(props: RouteComponentProps) {\r\n    return (\r\n        <div className='detail-page'>\r\n            Detail Page\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\n//REDUX IMPORTS\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { MainState } from '../../../_STORE'\r\n\r\n//INFOS IMPORTS\r\nimport { checkStatus } from './infos'\r\n\r\n//STYLE\r\nimport './BackGround.scss'\r\n\r\nexport default function Background() {\r\n\r\n    const state = useSelector((state: MainState) => state)\r\n\r\n    const status = checkStatus(state.forecastInfo.current.id)\r\n\r\n    const style = {\r\n        backgroundImage: `url('./assets/${status}.jpg')`\r\n    }\r\n\r\n    return (\r\n        <div className=\"background\" style={style}>\r\n        </div>\r\n    )\r\n}\r\n","export const checkStatus = (id: number) => {\r\n    let status: string = ''\r\n    if(id >= 200 && id <= 232){status = 'thunderstorm'}\r\n    if(id >= 300 && id < 321 || id >= 500 && id <= 531 ){ status='rain'}\r\n    if(id >= 600 && id <= 622){status='snow'}\r\n    if(id === 800 ){status='sun'}\r\n    if (id >= 801 && id <= 804) { status = 'cloud' }\r\n    return status\r\n}","//MAIN\r\nimport React, { PureComponent } from 'react'\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\n//PERSONAL COMPONENTS IMPORTS\r\nimport HomePage from '../../_PAGES/1.HomePage/HomePage'\r\nimport Navbar from '../0.Navbar/Navbar'\r\nimport DetailPage from '../../_PAGES/2.DetailPage/DetailPage'\r\nimport BackGround from '../1.Background/BackGround'\r\n\r\n//STYLE\r\nimport './RouterWeb.scss';\r\n\r\nexport default class RouterWeb extends PureComponent {\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Navbar />\r\n                <BackGround/>\r\n                <Switch>\r\n                    <Route path=\"/\" exact render={(props) => <HomePage {...props} />} />\r\n                    <Route path='/:city' render={ (props) => <DetailPage {...props}/>}/>\r\n                </Switch>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n","import { ICity } from './types'\r\nimport { SELECT_CITY } from './constants'\r\nimport { SelectCity } from './actions'\r\n\r\nconst city: ICity = {\r\n    city_name: '',\r\n    country_name: '',\r\n    lat: 0,\r\n    long: 0\r\n}\r\n\r\nexport const cityReducer = (state = city, action: SelectCity): ICity => {\r\n    switch (action.type) {\r\n        case SELECT_CITY:\r\n            return state = action.city\r\n        default: return state\r\n    }\r\n}\r\n","import { IForecast, IForecastApp } from './types'\r\nimport { CURRENT_FORECAST, WEEK_FORECAST } from './constants'\r\nimport { ForecastApp } from './actions'\r\n\r\nlet forecast: Array<IForecast> = []\r\nconst forecastInfo: IForecastApp = {\r\n    current: {\r\n        id: 0,\r\n        main: '',\r\n        description: '',\r\n        icon: '',\r\n        temp: 0,\r\n        humidity: 0,\r\n        wind_speed: 0,\r\n        clouds: 0,\r\n        rain: 0,\r\n        snow: 0\r\n    },\r\n    forecast: forecast\r\n}\r\n\r\nexport const forecastReducer = (state = forecastInfo, action: ForecastApp): IForecastApp => {\r\n    switch (action.type) {\r\n        case CURRENT_FORECAST:\r\n            return { ...state, current: action.forecast }\r\n        case WEEK_FORECAST:\r\n            return { ...state, forecast: action.weekForecast }\r\n        default: return state\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\r\nimport thunk, { ThunkMiddleware } from 'redux-thunk'\r\nimport { cityReducer } from './City/reducers'\r\nimport { SelectCity } from './City/actions'\r\nimport { forecastReducer } from './Forecast/reducers'\r\nimport { ForecastApp } from './Forecast/actions'\r\n\r\ndeclare global{\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose\r\n    }\r\n}\r\n\r\nconst composedEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n    city: cityReducer,\r\n    forecastInfo: forecastReducer\r\n})\r\n\r\ntype AllActions = SelectCity | ForecastApp\r\n\r\nexport type MainState = ReturnType<typeof rootReducer>\r\n\r\nexport const storeConfig = createStore(rootReducer, composedEnhancer(applyMiddleware(thunk as ThunkMiddleware<MainState, AllActions>)))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport RouterWeb from './_COMPONENTS/_MAIN/_RouterWeb/RouterWeb'\nimport { Provider } from 'react-redux'\nimport { storeConfig } from './_STORE'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={ storeConfig }>\n      <RouterWeb/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}